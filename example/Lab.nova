package "example"

import "nova/standard/math/logic/WFF"
import "nova/standard/math/logic/InvalidFormulaException"
import "nova/standard/math/logic/StatementLetter"
import "nova/standard/datastruct/HashMap"
import "nova/standard/network/ServerSocket"
import "nova/standard/star/Window"
import "nova/standard/math/NumericStatement"
import "nova/standard/datastruct/BinaryTree"

public class Lab
{
	public static main(String[] args)
	{
		BinaryTree tree = new BinaryTree()
		
		tree.addNode(5)
		tree.addNode(7)
		tree.addNode(3)
		
		Console.writeLine(tree.preorder())
		
		Square sq = new Square(4)
		
		Console.writeLine(getArea(sq))
		
		NumericStatement s = new NumericStatement("5a + (3 * 2)")
		
		Console.writeLine(s)
		
//		for (Int i = 0; i < 20; i++)
//		{
//			Window w = new Window()
//			
//			w.width = 300
//			w.height = 200
//			w.x = (i % 5) * w.width
//			w.y = (i / 5) * w.height
//			w.title = "Window(" + i + ") at (" + w.x + ", " + w.y + ")"
//			
//			w.create()
//		}
		
//		Console.writeLine("")
//		
//		StatementLetter[] letters =
//		[
//			new StatementLetter("A", "McDonald's is open"),
//			new StatementLetter("B", "Sally is awake"),
//			new StatementLetter("C", "McDonald's has food"),
//			new StatementLetter("D", "Sally is fat")
//		]
//		
//		WFF f = new WFF("A & B & C -> D", letters)
		
		Console.waitForEnter()
	}
	
	static getArea(Polygon p) -> Double
	{
		return p.calculateArea()
	}
}