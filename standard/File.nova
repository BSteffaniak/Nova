import "Thread"

public class File
{
	external type FILE
	
	FILE* fp
	
	external FILE* fopen(char location[], char operation[])
	external void perror(char name[])
	external FILE* freopen(char location[], char operation[], FILE* fp)
	external void fprintf(FILE* fp, char data[])
	external void fputs(char str[], FILE* stream)
	external void fflush(FILE* fp)
	external int fclose(FILE* fp)
	external void fgets(char buffer[], int size, FILE* fp)
	external char[] realloc(char buffer[], int size)
	external char getc(FILE* fp)
	external void rewind(FILE* fp)
	external int remove(char name[])
	
	external char EOF
	
	String location
	
	public File(String location)
	{
		this.location = location
		
		fp = fopen(location.toCharArray(), "r+")
	}
	
	public File(FILE* fp)
	{
		this.fp = fp;
	}
	
	public bool delete()
	{
		close()
		
		return remove(location.toCharArray()) == 0
	}
	
	public void reopen()
	{
		close()
		
		fp = fopen(location.toCharArray(), "r+")
	}
	
	public void rewind()
	{
		rewind(fp)
	}
	
	public bool exists()
	{
		return fp != 0
	}
	
	public bool create()
	{
		if (!exists())
		{
			fp = fopen(location.toCharArray(), "wb")
			
			if (!exists())
			{
				perror("fopen")
				
				return false
			}
			
			reopen()
			
			if (!exists())
			{
				perror("fopen")
				
				return false
			}
			
			return true
		}
		
		return false
	}
	
	public String readAllContents()
	{
		String data = ""
		
		String line = readLine()
		
		while (line != null)
		{
			if (data.length > 0)
			{
				data = data + "\n"
			}
			
			data = data + line
			
			line = readLine()
		}
		
		return data
	}
	
	public String readLine()
	{
		int buf  = 5
		int size = buf
		
		char line[] = new char[size]
		
		char c = getc(fp)
		
		if (c == EOF)
		{
			return null
		}
		
		int index = 0
		
		while (c != '\n' && c != EOF)
		{
			if (index >= size)
			{
				size = size + buf
				
				line = realloc(line, size)
			}
			
			line[index++] = c
			
			c = getc(fp)
			
//			if (c == '3' hk)
//			{
//				currentIndex++;
//			}
		}
		
		if (index >= size)
		{
			size++
			
			line = realloc(line, size)
		}
		
		line[index++] = '\0'
		
		line = realloc(line, index)
		
		return new String(line)
	}
	
	public void writeLine(String line)
	{
		write(line + "\n")
	}
	
	public void write(String data)
	{
		fputs(data.toCharArray(), fp)
		flush()
	}
	
	public void flush()
	{
		fflush(fp)
	}
	
	public void close()
	{
		if (exists())
		{
			fclose(fp)
		}
	}
}
