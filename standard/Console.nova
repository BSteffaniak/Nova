import "stdio.h"
import "stdlib.h"
import "String"

public class Console
{
	external type FILE
	
	external FILE* stdin
	external FILE* stdout
	external int   SEEK_END
	
	external void fgets(char buf[], int size, FILE* stream)
	external void fseek(FILE* stream, int offset, int origin)
	external void fputs(char str[], FILE* stream)
	external char scanf(char buf[], double* num)
	external char getchar()
	external int atoi(char array[])
	external char[] ufgets(FILE* stream)
	
	public static void writeLine(String text)
	{
		write(text + "\n")
	}
	
	public static void writeLine(Object obj)
	{
		writeLine(obj.toString())
	}
	
	public static void writeLine(double num)
	{
		writeLine(Double.toString(num))
	}
	
	public static void writeLine(float num)
	{
		writeLine(Double.toString(num))
	}
	
	public static void writeLine(long num)
	{
		writeLine(Long.toString(num))
	}
	
	public static void writeLine(int num)
	{
		writeLine(Integer.toString(num))
	}
	
	public static void writeLine(short num)
	{
		writeLine(Integer.toString(num))
	}
	
//	public static void writeLine(byte num)
//	{
//		writeLine(Integer.toString(num))
//	}
	
	public static void writeLine(char c)
	{
		writeLine(Char.toString(c))
	}
	
	public static void write(String text)
	{
		char cText[] = text.toCharArray()
		
		fputs(cText, stdout)
	}
	
	public static void write(Object obj)
	{
		write(obj.toString())
	}
	
	public static void write(double num)
	{
		write(Double.toString(num))
	}
	
	public static void write(float num)
	{
		write(Double.toString(num))
	}
	
	public static void write(long num)
	{
		write(Long.toString(num))
	}
	
	public static void write(int num)
	{
		write(Integer.toString(num))
	}
	
	public static void write(short num)
	{
		write(Integer.toString(num))
	}
	
//	public static void write(byte num)
//	{
//		write(Integer.toString(num))
//	}
	
	public static void write(char c)
	{
		write(Char.toString(c))
	}
	
	public static int readInt()
	{
		String s = readLine()
		
		return atoi(s.toCharArray())
	}
	
	public static double readDouble()
	{
		double num
		
		scanf("%lf", num)
		flush()
		
		return num
	}
	
	public static char readChar()
	{
		char c = getchar()
		
		flush()
		
		return c
	}
	
	static void flush()
	{
		fseek(stdin, 0, SEEK_END)
	}
	
	public static String readLine()
	{
		char line[] = ufgets(stdin)
		
		String s = new String(line)
		
		return s
	}
	
	public static void waitForEnter()
	{
		flush()
		
		char c[] = new char[2]
		
		fgets(c, 2, stdin)
	}
}