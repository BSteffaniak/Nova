package "nova/standard/database"

import "nova/standard/database/NativeDBConnector.h"

public class DBConnector
{
	external type MYSQL
	
	external MYSQL mysql
	
	// Add a space after void and watch it BREAK!!!
	external void nova_db_init()
	external void nova_db_connect1(char host[], char user[], char password[])
	external void nova_db_connect2(char host[], char user[], char password[], char database[])
	external void nova_db_connect3(char host[], char user[], char password[], char database[], int port, char unix_socket[], int client_flag)
	external void nova_db_close()
	external void nova_db_select_db(char database[])
	external void nova_user_select(char username[], char password[], char database[])
	external char[] nova_db_error()
	external void nova_exec_query(char command[])
	external char[][][] nova_get_results()
	external long nova_num_rows()
	external long nova_num_cols()
	
	visible String error
	
	public construct()
	{
		error = ""
	}
	
	public connect(String host, String user, String password)
	{
		nova_db_connect1(host.toCharArray(), user.toCharArray(), password.toCharArray())
		
		updateError()
	}
	
	public connect(String host, String user, String password, String database)
	{
		nova_db_connect2(host.toCharArray(), user.toCharArray(), password.toCharArray(), database.toCharArray())
		
		updateError()
	}
	
	public connect(String host, String user, String password, String database, Int port, String unixSocket, Int clientFlag)
	{
		nova_db_connect3(host.toCharArray(), user.toCharArray(), password.toCharArray(), database.toCharArray(), port, unixSocket.toCharArray(), clientFlag)
		
		updateError()
	}
	
	public updateError()
	{
		error = new String(nova_db_error())
	}
	
	public changeUser(String username, String password, String database)
	{
		nova_user_select(username.toCharArray(), password.toCharArray(), database.toCharArray())
		
		updateError()
	}
	
	public query(String query) -> ResultSet
	{
		nova_exec_query(query.toCharArray())
		
		Char arrays[][][] = nova_get_results()
		
		if (arrays != 0)
		{
			Int numRows = (Int)nova_num_rows()
			Int numCols = (Int)nova_num_cols()
			
			String rows[][] = new String[numRows][numCols]
			
			for (Int i = 0; i < numRows; i++)
			{
				for (Int j = 0; j < numCols; j++)
				{
					rows[i][j] = new String(arrays[i][j])
				}
			}
			
			ResultSet result = new ResultSet(rows, numRows, numCols)
			
			updateError()
			
			return result
		}
		
		updateError()
		
		return null
	}
	
	public close()
	{
		nova_db_close()
		
		updateError()
	}
}