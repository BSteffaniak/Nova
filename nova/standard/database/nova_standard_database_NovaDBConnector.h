#pragma once
#ifndef FILE_DBConnector_NOVA
#define FILE_DBConnector_NOVA

typedef struct nova_standard_database_NovaDBConnector nova_standard_database_NovaDBConnector;

#include <Nova.h>
#include <ExceptionHandler.h>
#include <nova/standard/exception/nova_standard_exception_NovaExceptionData.h>
#include <nova/standard/exception/nova_standard_exception_NovaException.h>
#include <nova/standard/exception/nova_standard_exception_NovaDivideByZeroException.h>
#include <nova/standard/io/nova_standard_io_NovaConsole.h>
#include <nova/standard/primitive/number/nova_standard_primitive_number_NovaNumber.h>
#include <nova/standard/primitive/number/nova_standard_primitive_number_NovaByte.h>
#include <nova/standard/primitive/number/nova_standard_primitive_number_NovaShort.h>
#include <nova/standard/primitive/number/nova_standard_primitive_number_NovaInt.h>
#include <nova/standard/primitive/number/nova_standard_primitive_number_NovaLong.h>
#include <nova/standard/primitive/number/nova_standard_primitive_number_NovaFloat.h>
#include <nova/standard/primitive/number/nova_standard_primitive_number_NovaDouble.h>
#include <nova/standard/primitive/nova_standard_primitive_NovaNull.h>
#include <nova/standard/primitive/number/nova_standard_primitive_number_NovaChar.h>
#include <nova/standard/primitive/nova_standard_primitive_NovaBool.h>
#include <nova/standard/datastruct/nova_standard_datastruct_NovaArray.h>
#include <nova/standard/gc/nova_standard_gc_NovaGC.h>
#include <nova/standard/nova_standard_NovaObject.h>
#include <nova/standard/nova_standard_NovaString.h>
#include <nova/standard/nova_standard_NovaSystem.h>
#include <nova/standard/nova_standard_NovaMath.h>
#include <nova/standard/database/NativeDBConnector.h>
#include <nova/standard/database/nova_standard_database_NovaResultSet.h>

typedef struct nova_VTable_nova_standard_database_NovaDBConnector
{
	long (*nova_standard_NovaObject_Novavirtual0_getHashCodeLong)(nova_standard_NovaObject*, nova_standard_exception_NovaExceptionData*);
	nova_standard_NovaString* (*nova_standard_NovaObject_Novavirtual0_toString)(nova_standard_NovaObject*, nova_standard_exception_NovaExceptionData*);
	char (*nova_standard_NovaObject_Novavirtual0_equals)(nova_standard_NovaObject*, nova_standard_exception_NovaExceptionData*, nova_standard_NovaObject*);
} nova_VTable_nova_standard_database_NovaDBConnector;

CCLASS_CLASS
(
	nova_standard_database_NovaDBConnector, 
	
	nova_VTable_nova_standard_database_NovaDBConnector* vtable;
	nova_standard_NovaString* nova_standard_database_NovaDBConnector_Novaerror;
)

void nova_standard_database_NovaDBConnectorNova_init_static(nova_standard_exception_NovaExceptionData* exceptionData);
nova_standard_database_NovaDBConnector* nova_standard_database_NovaDBConnector_Nova0_construct(nova_standard_database_NovaDBConnector* this, nova_standard_exception_NovaExceptionData* exceptionData);
void nova_del_DBConnector(nova_standard_database_NovaDBConnector** this, nova_standard_exception_NovaExceptionData* exceptionData);
void nova_standard_database_NovaDBConnector_Novathis(nova_standard_database_NovaDBConnector* this, nova_standard_exception_NovaExceptionData* exceptionData);
void nova_standard_database_NovaDBConnector_Nova0_connect(nova_standard_database_NovaDBConnector* this, nova_standard_exception_NovaExceptionData* exceptionData, nova_standard_NovaString* l0_Novahost, nova_standard_NovaString* l0_Novauser, nova_standard_NovaString* l0_Novapassword);
void nova_standard_database_NovaDBConnector_Nova1_connect(nova_standard_database_NovaDBConnector* this, nova_standard_exception_NovaExceptionData* exceptionData, nova_standard_NovaString* l0_Novahost, nova_standard_NovaString* l0_Novauser, nova_standard_NovaString* l0_Novapassword, nova_standard_NovaString* l0_Novadatabase);
void nova_standard_database_NovaDBConnector_Nova2_connect(nova_standard_database_NovaDBConnector* this, nova_standard_exception_NovaExceptionData* exceptionData, nova_standard_NovaString* l0_Novahost, nova_standard_NovaString* l0_Novauser, nova_standard_NovaString* l0_Novapassword, nova_standard_NovaString* l0_Novadatabase, int l0_Novaport, nova_standard_NovaString* l0_NovaunixSocket, int l0_NovaclientFlag);
void nova_standard_database_NovaDBConnector_NovaupdateError(nova_standard_database_NovaDBConnector* this, nova_standard_exception_NovaExceptionData* exceptionData);
void nova_standard_database_NovaDBConnector_NovachangeUser(nova_standard_database_NovaDBConnector* this, nova_standard_exception_NovaExceptionData* exceptionData, nova_standard_NovaString* l0_Novausername, nova_standard_NovaString* l0_Novapassword, nova_standard_NovaString* l0_Novadatabase);
nova_standard_database_NovaResultSet* nova_standard_database_NovaDBConnector_Novaquery(nova_standard_database_NovaDBConnector* this, nova_standard_exception_NovaExceptionData* exceptionData, nova_standard_NovaString* l0_Novaquery);
void nova_standard_database_NovaDBConnector_Novaclose(nova_standard_database_NovaDBConnector* this, nova_standard_exception_NovaExceptionData* exceptionData);
void nova_standard_database_NovaDBConnector_Novasuper(nova_standard_database_NovaDBConnector* this, nova_standard_exception_NovaExceptionData* exceptionData);

#endif