package "nova/standard/datastruct"

public class ArrayList<E>
{
	external void arrayCopy(E dest[], int dIndex, E src[], int sIndex, int len, int destArrLen, int size)
	
	Int	bufferSize
	
	visible Int	size
	
	E[] data
	
	public construct()
	{
		size = 0
		bufferSize = 0
		increaseSize()
	}
	
	public add(E element)
	{
		if (size >= bufferSize)
		{
			increaseSize()
		}
		
		data[size++] = element
	}
	
	public add(Int index, E element)
	{
		add(element)
		
		shiftRight(index, size)
		
		data[index] = element
	}
	
	public remove(Int index) -> E
	{
		E element = data[index]
		
		shiftLeft(index + 1, size--)
		
		return element
	}
	
	shiftRight(Int left, Int right)
	{
		for (Int i = right - 1; i > left; i--)
		{
			data[i] = data[i - 1]
		}
		
		data[left] = null
	}
	
	shiftLeft(Int left, Int right)
	{
		for (Int i = left - 1; i < right - 1; i++)
		{
			data[i] = data[i + 1]
		}
		
		data[right - 1] = null
	}
	
	public swap(Int index1, Int index2)
	{
		E temp = data[index1]
		data[index1] = data[index2]
		data[index2] = temp
	}
	
	public increaseSize()
	{
		bufferSize = bufferSize + 3
		
		E tmp[] = new E[bufferSize]
		
		arrayCopy(tmp, 0, data, 0, size, bufferSize, 4)
		
		data = tmp
	}
	
	public get(Int index) -> E
	{
		return data[index]
	}
}