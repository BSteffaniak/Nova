package "nova/standard/primitive/number"

public class Long extends Number
{
	Long value
	
	construct(Long value)
	{
		this.value = value
	}
	
	public static numDigits(Long number) -> Int
	{
		if (number < 0)
		{
			return numDigits(-number) + 1
		}
		
		Int size
		
		number = number / 10
		
		for (size = 1; number > 0; size++)
		{
			number = number / 10
		}
		
		return size
	}
	
	public static toString(Long value) -> String
	{
		Int  charOffset = '0'
		Int  digits  = numDigits(value)
		Char data[]  = new Char[digits + 1]
		
		data[digits] = '\0'
		
		Int  offset  = 0
		
		if (value < 0)
		{
			data[0] = '-'
			
			value  = -value
			
			offset = 1
		}
		
		Int nums = digits-- - offset
		
		for (Int index = 0; index < nums; index++)
		{
			data[digits - index] = (Char)(charOffset + value % 10)
			
			value = value / 10
		}
		
		return new String(data)
	}
}